@page "/schedule"
@using F1App.Models.OpenApiModels
@using F1App.Models.ErgastApiModels
@using System.Collections.ObjectModel
@using Newtonsoft.Json

<MudText Typo="Typo.h4">Formula 1 2024 Schedule</MudText>

@if (Races is not null)
{
    foreach (var race in Races.MRData.RaceTable.Races)
    {
        <MudLink Href="@($"/sessions/{race.Season}/{race.Round}")">
            <MudPaper Elevation="4" Class="pa-10 rounded-xl white-text ma-5">
                <MudStack Class="mb-n6">
                    <MudGrid>
                        <MudStack Row="true" Class="d-flex align-center">
                            <MudIcon Icon="@Icons.Material.Filled.CalendarToday"></MudIcon>
                            <MudText Typo="Typo.h6">@race.RaceName</MudText>
                        </MudStack>
                    </MudGrid>
                    <MudGrid Class="mt-3 d-flex justify-space-between">
                        <MudStack Row="true" Class="green-text text-lighten-2">
                            <MudIcon Icon="@Icons.Material.Rounded.LocationOn"></MudIcon>
                            <MudText Typo="Typo.subtitle1">@race.Circuit.circuitName</MudText>
                        </MudStack>
                        <MudStack Row="true" Class="cyan-text text-lighten-2">
                            <MudIcon Icon="@Icons.Material.Filled.AccessTime"></MudIcon>
                            <MudText Typo="Typo.subtitle1">@race.Date @race.Time</MudText>
                        </MudStack>
                    </MudGrid>
                </MudStack>
                <MudProgressLinear Style=@(race.IsLive==true ? "display:block" : "display:none") Color="Color.Success" Rounded="true" Indeterminate="true" />
            </MudPaper>
        </MudLink>
    }
}
else
{
    <MudStack Class="d-flex justify-center">
        @for (int i = 0; i < 5; i++)
        {
            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Width="80%" Height="110px" Class="ma-3 rounded-xl" />
        }
    </MudStack>
}

@code {
    [Inject]
    public IHttpClientFactory ClientFactory { get; set; } = default!;
    [Inject]
    public NavigationManager _navigationManager { get; set; } = default!;

    public Root Races { get; set; } = null!;

    [Parameter]
    public string IsVisible { get; set; } = "none";

    private string? selectedYear;

    protected override async Task OnInitializedAsync()
    {
        var today = DateTime.Now;
        var todayPlusNone = $"{today.Year}-{today.Month:D2}-{today.Day}";
        var todayPlusOne = $"{today.AddDays(1).Year}-{today.AddDays(1).Month:D2}-{today.AddDays(1).Day}";
        var todayPlusTwo = $"{today.AddDays(9).Year}-{today.AddDays(9).Month:D2}-{today.AddDays(9).Day}";

        var client = ClientFactory.CreateClient("ApiErgast");

        var response = await client.GetAsync("ergast/f1/current.json");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            Races = JsonConvert.DeserializeObject<Root>(content) ?? new();
            foreach (var race in Races.MRData.RaceTable.Races)
            {
                if (todayPlusNone == race.Date || todayPlusOne == race.Date || todayPlusTwo == race.Date)
                {
                    race.IsLive = true;
                }
            }
        }

    }
}
